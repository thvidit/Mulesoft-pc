#%RAML 1.0
title: Retail Locations System API
baseUri: http://localhost:8081/api

traits: 
  geoSearch: !include traits/geoSearch.raml
  productSearch: !include traits/productSearch.raml
      
types:
  StoreInfo:
    type: object
    properties: 
      storeId?: string
      name: string
      description?: string
      notes?: string
      openingHours:
        type: string
        example: "Mo,Tu,We,Th,Fr,Sa,Su 09:00-21:00"
      contact: ContactInfo
      address: Address
      geo: Geo
      distance?: number
      distanceUnit?: 
        type: string
        enum: [mi, km]
              
  ContactInfo:
    type: object
    properties: 
      email: string
      phone: string
      
  Address:
    type: object
    properties: 
      streetLine1: string
      streetLine2: string
      city: string
      zipCode: string
      state: string
      country: string
      
  Geo:
    type: object
    properties: 
      latitude: 
        type: number
        format: double
      longitude:
        type: number
        format: double
        
  ItemAvailabilityResponse:
    type: object
    properties: 
      searchCriteria: SearchCriteria
      results: StoreAvailabilityData[]
      
  SearchCriteria:
    type: object
    properties: 
      productId?: string
      variantId?: string
      quantity?: integer
      latitude: number
      longitude: number
      radius: integer
      useMetric: boolean
      maxResults?: integer
      
  StoreSearchResponse:
    type: object
    properties:
      searchCriteria: SearchCriteria
      results: StoreInfo[]
      
  StoreAvailabilityData:
    type: object
    properties: 
      storeInfo: StoreInfo
      quantityInStock: integer
      quantityReserved?: integer
      
  Reservation: 
    type: object
    properties:
      productId: string
      variantId: string
      customerId: string
      quantity: 
        type: integer
        minimum: 1
      storeId: string
#      deliveryMethod: 
#        type: string
#        enum: [SHIPMENT, PICKUP] 

/stores:
  get:
    is: [ geoSearch ]
    queryParameters: 
      zip: 
        required: false
        description: |
          Zip code identifying area for store search. You must choose either zip, city or coordinates search, not all at once.
    responses: 
      200:
        body:
          application/json:
            type: StoreSearchResponse
            example: !include examples/store-search-response.raml
  post:
    description: creates new store
    body: 
      application/json:
        type: StoreInfo
        example: !include examples/create-store-request.raml
    responses: 
      201:
        headers: 
          Location:
        body: 
          application/json:
            example: !include examples/store-response.raml
  
  /{storeId}:
    get:
      description: |
        Retrieve info about particular store (address, name, etc.)
      responses: 
        200:
          body: 
            application/json:
              type: StoreInfo
              example: !include examples/store-response.raml
              
    put:
      description: | 
        Updates information about particular store (address, name, etc)
      body: 
        application/json:
          type: StoreInfo
          example: !include examples/store-response.raml
      responses: 
        200:
          body: 
            application/json:
              type: StoreInfo
              example: !include examples/store-response.raml
      

/productLocator:
  get:
    description: |
      Searches for a product identified by productId and variantId. If quantity is provided as search parameter, only stores that have required number of items in stock are included in the response. Filtering by location coordinates and maximum radius can be used to further filter the search results.
    is: [ geoSearch, productSearch ]
    queryParameters: 
    responses: 
      200:
        body: 
          application/json:
            type: ItemAvailabilityResponse
            example: !include examples/item-search-response.raml
   
/reservation:
    post:
      description: reservation of product in store
      body: 
        application/json:
          type: Reservation
          example: !include examples/product-reserve-request.raml
      responses: 
        201: 
          body: 
            application/json: 
              example: |
                {
                  "message": "Product was reserved" 
                }  