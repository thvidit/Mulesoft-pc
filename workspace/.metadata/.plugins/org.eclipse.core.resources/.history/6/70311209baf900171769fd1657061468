<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
    <http:listener-config name="HTTP_Listener_Configuration" host="0.0.0.0" port="8081" basePath="/cafe" doc:name="HTTP Listener Configuration"/>
    <db:mysql-config name="MySQL_Configuration" host="localhost" port="3306" user="root" password="Welcome123" database="cafe1" doc:name="MySQL Configuration"/>
    <payload-type-filter expectedType="java.util.List" name="Payload" doc:name="Payload"/>
    <flow name="GetMeals">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/meals" doc:name="HTTP"/>
        <set-variable variableName="meal" value="#[message.inboundProperties.'http.query.params'.meal]" doc:name="Set Meal"/>
        <logger message="Meal is: #[flowVars.meal]" level="INFO" doc:name="Logger"/>
        <choice doc:name="Choice">
            <when expression="#[flowVars.meal == &quot;breakfast&quot;]">
                <flow-ref name="BreakfastFlow" doc:name="BreakfastFlow"/>
            </when>
            <when expression="#[flowVars.meal == &quot;lunch&quot;]">
                <flow-ref name="LunchFlow" doc:name="LunchFlow"/>
            </when>
            <when expression="#[flowVars.meal == &quot;snacks&quot;]">
                <flow-ref name="SnacksFlow" doc:name="SnacksFlow"/>
            </when>
            <when expression="#[flowVars.meal == &quot;dinner&quot;]">
                <flow-ref name="DinnerFlow" doc:name="DinnerFlow"/>
            </when>
            <otherwise>
                <flow-ref name="AllmealsFlow" doc:name="AllmealsFlow"/>
            </otherwise>
        </choice>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload map {
	mealId: $.mealId,
	mealName: $.mealName,
	mealDesc: $.mealDesc,
	mealPrice: $.mealPrice,
	fooItems: $.list1
}]]></dw:set-payload>
        </dw:transform-message>
        <logger level="INFO" doc:name="Logger"/>
        <exception-strategy ref="CafeExceptionStrategy" doc:name="Reference Exception Strategy"/>
    </flow>
    <sub-flow name="BreakfastFlow">
        <db:select config-ref="MySQL_Configuration" doc:name="Select meal ID">
            <db:parameterized-query><![CDATA[SELECT mealtype_id FROM
mealtype WHERE LCASE(mealtype_name) = "breakfast";]]></db:parameterized-query>
        </db:select>
        <flow-ref name="GetData" doc:name="GetData"/>
        <logger level="INFO" doc:name="Logger"/>
    </sub-flow>
    <sub-flow name="LunchFlow">
        <db:select config-ref="MySQL_Configuration" doc:name="Select meal ID">
            <db:parameterized-query><![CDATA[SELECT mealtype_id FROM
mealtype WHERE LCASE(mealtype_name) = "lunch";]]></db:parameterized-query>
        </db:select>
        <flow-ref name="GetData" doc:name="GetData"/>
        <logger level="INFO" doc:name="Logger"/>
    </sub-flow>
    <sub-flow name="SnacksFlow">
        <db:select config-ref="MySQL_Configuration" doc:name="Select meal ID">
            <db:parameterized-query><![CDATA[SELECT mealtype_id FROM
mealtype WHERE LCASE(mealtype_name) = "snacks";]]></db:parameterized-query>
        </db:select>
        <flow-ref name="GetData" doc:name="GetData"/>
        <logger level="INFO" doc:name="Logger"/>
    </sub-flow>
    <sub-flow name="DinnerFlow">
        <db:select config-ref="MySQL_Configuration" doc:name="Select meal ID">
            <db:parameterized-query><![CDATA[SELECT mealtype_id FROM
mealtype WHERE LCASE(mealtype_name) = "dinner";]]></db:parameterized-query>
        </db:select>
        <flow-ref name="GetData" doc:name="GetData"/>
        <logger level="INFO" doc:name="Logger"/>
    </sub-flow>
    <sub-flow name="AllmealsFlow">
        <scatter-gather doc:name="Scatter-Gather">
            <processor-chain>
                <flow-ref name="BreakfastFlow" doc:name="BreakfastFlow"/>
                <expression-filter expression="#[payload.size() != 0]" doc:name="Expression"/>
            </processor-chain>
            <processor-chain>
                <flow-ref name="LunchFlow" doc:name="LunchFlow"/>
                <expression-filter expression="#[payload.size() != 0]" doc:name="Expression"/>
            </processor-chain>
            <processor-chain>
                <flow-ref name="SnacksFlow" doc:name="SnacksFlow"/>
                <expression-filter expression="#[payload.size() != 0]" doc:name="Expression"/>
                <logger message="After filter snacks list is  : #[payload]" level="INFO" doc:name="Logger"/>
            </processor-chain>
            <processor-chain>
                <flow-ref name="DinnerFlow" doc:name="DinnerFlow"/>
                <expression-filter expression="#[payload.size() != 0]" doc:name="Expression"/>
            </processor-chain>
        </scatter-gather>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
flatten payload]]></dw:set-payload>
        </dw:transform-message>
    </sub-flow>
    <sub-flow name="GetData">
        <set-variable variableName="mealTypeId" value="#[payload.get(0).mealtype_id]" doc:name="Set meal type Id"/>
        <flow-ref name="GetMealIdList" doc:name="GetMealIdList"/>
        <flow-ref name="SetMealList" doc:name="SetMealList"/>
        <flow-ref name="GetFoodItemList" doc:name="GetFoodItemList"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
flowVars.mealList map {
	mealId: $.meal_id,
	mealName: $.meal_name,
	mealDesc: $.meal_desc,
	mealPrice: $.meal_price,
	list1: flowVars.foodDataList[$$]
} as :object {
		class: "com.cafe.models.FoodModel"
}]]></dw:set-payload>
        </dw:transform-message>
        <logger message="Meal list is: #[flowVars.mealList] || Food item list is: #[flowVars.foodItemList] || Food Data list is: #[flowVars.foodDataList]" level="INFO" doc:name="Logger"/>
    </sub-flow>
    <sub-flow name="GetMealIdList">
        <db:select config-ref="MySQL_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[SELECT meal_id 
FROM mealavail 
WHERE mealtype_id = #[flowVars.mealTypeId]]]></db:parameterized-query>
        </db:select>
        <set-variable variableName="mealList" value="#[new java.util.ArrayList()]" doc:name="Initialize meal List"/>
        <set-variable variableName="mealIdList" value="#[new java.util.ArrayList()]" doc:name="Initialize meal Id List"/>
    </sub-flow>
    <sub-flow name="SetMealList">
        <foreach doc:name="For Each">
            <set-variable variableName="mealId" value="#[payload.meal_id]" doc:name="Set meal Id"/>
            <set-variable variableName="id" value="#[flowVars.mealIdList.add(mealId)]" doc:name="Set meal Id List"/>
            <db:select config-ref="MySQL_Configuration" doc:name="Database">
                <db:parameterized-query><![CDATA[SELECT * FROM meals
WHERE meal_id = #[flowVars.mealId]]]></db:parameterized-query>
            </db:select>
            <set-variable variableName="mealDetails" value="#[flowVars.mealList.add(payload.get(0))]" doc:name="Set meal List"/>
        </foreach>
    </sub-flow>
    <sub-flow name="GetFoodItemList">
        <set-payload value="#[flowVars.mealIdList]" doc:name="Set Payload"/>
        <set-variable variableName="foodItemList" value="#[new java.util.ArrayList()]" doc:name="Initialize Food Item Id List"/>
        <set-variable variableName="foodDataList" value="#[new java.util.ArrayList()]" doc:name="Initialize Food data list"/>
        <foreach doc:name="For Each">
            <db:select config-ref="MySQL_Configuration" doc:name="Database">
                <db:parameterized-query><![CDATA[SELECT item_id 
FROM foodmeals
WHERE meal_id= #[payload]]]></db:parameterized-query>
            </db:select>
            <flow-ref name="GetFoodItemsData" doc:name="GetFoodItemsData"/>
        </foreach>
        <logger level="INFO" doc:name="Logger"/>
    </sub-flow>
    <sub-flow name="GetFoodItemsData">
        <set-variable variableName="temp" value="#[new java.util.ArrayList()]" doc:name="Temp List"/>
        <foreach doc:name="For Each">
            <db:select config-ref="MySQL_Configuration" doc:name="Database">
                <db:parameterized-query><![CDATA[SELECT * FROM fooditems
WHERE item_id = #[payload.item_id]]]></db:parameterized-query>
            </db:select>
            <set-variable variableName="tempdata" value="#[flowVars.temp.add(payload.get(0))]" doc:name="Add to temp list"/>
        </foreach>
        <set-variable variableName="foodData" value="#[flowVars.foodDataList.add(flowVars.temp)]" doc:name="Add to food data list"/>
        <logger message="Food data list for 1: #[flowVars.foodDataList]" level="INFO" doc:name="Logger"/>
    </sub-flow>
    <catch-exception-strategy name="CafeExceptionStrategy">
        <set-payload value="{
	&quot;message&quot;: &quot;Some Exception Occurred!&quot;
}" mimeType="application/json" doc:name="Set Payload"/>
    </catch-exception-strategy>
</mule>
