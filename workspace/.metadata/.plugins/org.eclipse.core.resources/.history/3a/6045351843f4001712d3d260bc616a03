<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">

    <flow name="getCustomerFromSFDC">
        <http:request config-ref="retail-customer-system-api" path="/customers/{customerId}" method="GET" doc:name="GET/customers/{customerId}">
            <http:request-builder>
                <http:uri-param paramName="customerId" value="#[flowVars.customerId]"/>
            </http:request-builder>
        </http:request>
        <dw:transform-message doc:name="Response Message">
        <dw:input-payload mimeType="application/json" />
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	identifier: payload.customerId,
	firstName: payload.firstName,
	lastName: payload.lastName,
	paymentMethods: [
		{
			paymentMethodType: 	{
				issuer: "BANK",
				medium: "CARD",
				name: "VISA"
			}
		}
	],
	deliveryAddresses: [
		{
			type: "BILLING",
			address: payload.postalAddress.street,
			city: payload.postalAddress.city,
			country: payload.postalAddress.country,
			postalCode: payload.postalAddress.postalCode,
			recipient: (payload.firstName ++ " " ++ payload.lastName),
			state: payload.postalAddress.state,
			attention: null,
			mailStopCode: null,
			secondaryAddress: null
		},
		{
			type: "SHIPPING",
			address: payload.deliveryAddress.street,
			city: payload.deliveryAddress.city,
			country: payload.deliveryAddress.country,
			postalCode: payload.deliveryAddress.postalCode,
			recipient: (payload.firstName ++ " " ++ payload.lastName),
			state: payload.deliveryAddress.state,
			attention: null,
			mailStopCode: null,
			secondaryAddress: null
		}
	]
}]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="putCustomerSFDC">

        <dw:transform-message doc:name="Input transform for PUT operation">
        <dw:input-payload mimeType="application/json" />
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	
	customerId: payload.identifier,
	(firstName: payload.firstName) when payload.firstName?,
	lastName: payload.lastName, 
	(payload.deliveryAddresses filter ($.type == 'BILLING') map {
		postalAddress:{
			(street: $.address) when $.address?, 
			(city: $.city)  when $.city?,
			(postalCode: $.postalCode) when $.postalCode?, 
			(state: $.state) when $.state?,
			(country: $.country) when $.country?		
		}
				
	}),
	(payload.deliveryAddresses filter ($.type == 'SHIPPING') map {
		deliveryAddress:{	
			(street: $.address) when $.address?, 
			(city: $.city)  when $.city?,
			(postalCode: $.postalCode) when $.postalCode?, 
			(state: $.state) when $.state?,
			(country: $.country) when $.country?
		}	
	}) 
}]]></dw:set-payload>
        </dw:transform-message>


        <http:request config-ref="retail-customer-system-api" path="/customers/{customerId}" method="PUT" doc:name="PUT/customers/{customerId}">
            <http:request-builder>
                <http:uri-param paramName="customerId" value="#[flowVars.customerId]"/>
            </http:request-builder>
        </http:request>
        <logger message="Customer was updated" level="INFO" doc:name="Success operation "/>


    </flow>
    <flow name="getCategories">
        <http:request config-ref="retail-product-system-api" path="/categories" method="GET" doc:name="GET/categories"/>
        <dw:transform-message doc:name="Response message">
        	<dw:input-payload mimeType="application/json" />
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="getCategory">
        <http:request config-ref="retail-product-system-api" path="/categories/{categoryId}" method="GET" doc:name="GET/categories/{categoryId}">
            <http:request-builder>
                <http:uri-param paramName="categoryId" value="#[flowVars.categoryId]"/>
            </http:request-builder>
            <http:success-status-code-validator values="200,404"/>
        </http:request>
        <choice doc:name="Found?">
             <when expression="#[message.inboundProperties.'http.status' == 200]">
                 <dw:transform-message doc:name="Response message">
                     <dw:input-payload mimeType="application/json"/>
                     <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload
 ]]></dw:set-payload>
                 </dw:transform-message>
             </when>
 	          <otherwise>
                 <flow-ref name="notFoundResponse" doc:name="notFoundResponse"/>
             </otherwise>
        </choice>
    </flow>
    <flow name="getProductsByCategory">
    	<http:request config-ref="retail-product-system-api" path="/categories/{categoryId}/products" method="GET" doc:name="GET/categories/{categoryId}/products">
            <http:request-builder>
                <http:uri-param paramName="categoryId" value="#[flowVars.categoryId]"/>

            </http:request-builder>
        </http:request>
		<dw:transform-message doc:name="Response message">
        	<dw:input-payload mimeType="application/json" />
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
        </dw:transform-message>

    </flow>
    <flow name="postShoppingCart">

        <dw:transform-message doc:name="Input transform for PUT operation">
        <dw:input-payload mimeType="application/json" />
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
[{
	customerId: payload.customerId,
	items: payload.items map {
		productId: $.item.productId,
		variantId: $.item.identifier, 
		quantity: $.quantity.amount,
		location: $.location 		
	}
}]]]></dw:set-payload>
        </dw:transform-message>


        <http:request config-ref="retail-shopping-cart-process-api" path="/shoppingCarts" method="POST" doc:name="POST/shoppingCarts">

        </http:request>
        <logger message="Shopping Cart was created" level="INFO" doc:name="Success operation "/>
    </flow>
    <flow name="getShoppingCart">
        <http:request config-ref="retail-shopping-cart-process-api" path="/shoppingCarts/{shoppingCartId}" method="GET" doc:name="GET/shoppingCarts/{shoppingCartId}">
            <http:request-builder>
                 <http:uri-param paramName="shoppingCartId" value="#[flowVars.shoppingCartId]"/>
            </http:request-builder>
            <http:success-status-code-validator values="200,404"/>
        </http:request>
        <choice doc:name="Found?">
           <when expression="#[message.inboundProperties.'http.status' == 200]">
                 <dw:transform-message doc:name="Response message">
                     <dw:input-payload mimeType="application/json"/>
                     <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload
 ]]></dw:set-payload>
                 </dw:transform-message>
             </when>
             <otherwise>
                 <flow-ref name="notFoundResponse" doc:name="notFoundResponse"/>
             </otherwise>
         </choice>
    </flow>
    <flow name="putShoppingCart">

        <dw:transform-message doc:name="Input transform for PUT operation">
        <dw:input-payload mimeType="application/json" />
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
items: payload.items map {
		productId: $.item.productId,
		variantId: $.item.identifier, 
		quantity: $.quantity.amount,
		location: $.location	 		
	}]]></dw:set-payload>
        </dw:transform-message>


        <http:request config-ref="retail-shopping-cart-process-api" path="/shoppingCarts/{shoppingCartId}" method="PUT" doc:name="PUT/shoppingCarts/{shoppingCartId}">
            <http:request-builder>
                <http:uri-param paramName="shoppingCartId" value="#[flowVars.shoppingCartId]"/>

            </http:request-builder>
        </http:request>
        <logger message="Shopping Cart was updated" level="INFO" doc:name="Success operation "/>
    </flow>
    <flow name="deleteShoppingCart">
        <http:request config-ref="retail-shopping-cart-process-api" path="/shoppingCarts/{shoppingCartId}" method="DELETE" doc:name="DELETE/shoppingCarts/{shoppingCartId}">
            <http:request-builder>
                <http:uri-param paramName="shoppingCartId" value="#[flowVars.shoppingCartId]"/>

            </http:request-builder>
        </http:request>
        <dw:transform-message doc:name="Response message">
         	<dw:input-payload mimeType="application/json" />
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <logger message="Shopping Cart was deleted" level="INFO" doc:name="Success operation "/>
    </flow>
    <flow name="getShoppingCartsForCustomer">
        <http:request config-ref="retail-shopping-cart-process-api" path="/customers/{customerId}/shoppingCarts" method="GET" doc:name="GET/customers/{customerId}/shoppingCarts">
            <http:request-builder>
                <http:uri-param paramName="customerId" value="#[flowVars.customerId]"/>
            </http:request-builder>
        </http:request>
        <dw:transform-message doc:name="Response message">
        	<dw:input-payload mimeType="application/json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload
]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="getProducts">
        <http:request config-ref="retail-product-system-api" path="/products" method="GET" doc:name="GET/products">
        </http:request>
        <dw:transform-message doc:name="Response message">
        	<dw:input-payload mimeType="application/json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload
]]></dw:set-payload>
        </dw:transform-message>
	</flow>
  
    <flow name="getProduct">
        <http:request config-ref="retail-product-system-api" path="/products/{productId}" method="GET" doc:name="GET/products/{productId}">
           <http:request-builder>
                 <http:uri-param paramName="productId" value="#[flowVars.productId]"/>
           </http:request-builder>
             <http:success-status-code-validator values="200,404"/>
         </http:request>
         <choice doc:name="Found?">
             <when expression="#[message.inboundProperties.'http.status' == 200]">
                 <dw:transform-message doc:name="Response message">
                     <dw:input-payload mimeType="application/json"/>
                     <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload
]]></dw:set-payload>
                </dw:transform-message>
            </when>
            <otherwise>
                <flow-ref name="notFoundResponse" doc:name="notFoundResponse"/>
            </otherwise>
        </choice>
    </flow>
    <flow name="getVariantsByProduct">
        <http:request config-ref="retail-product-system-api" path="/products/{productId}/variants" method="GET" doc:name="GET/products/{productId}/variants">
            <http:request-builder>
                <http:uri-param paramName="productId" value="#[flowVars.productId]"/>
            </http:request-builder>
        </http:request>
        <dw:transform-message doc:name="Response message">
        	<dw:input-payload mimeType="application/json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
        </dw:transform-message>

    </flow>
    <flow name="getVariantByProduct">
		 <http:request config-ref="retail-product-system-api" path="/products/{productId}/variants/{variantId}" method="GET" doc:name="GET/products/{productId}/variants/{variantId}">
                        <http:request-builder>
                			<http:uri-param paramName="productId" value="#[flowVars.productId]"/>
                			<http:uri-param paramName="variantId" value="#[flowVars.productVariantId]"/>

						 </http:request-builder>
                    <http:success-status-code-validator values="200,404"/>
         </http:request>
         <choice doc:name="Found?">
             <when expression="#[message.inboundProperties.'http.status' == 200]">
                 <dw:transform-message doc:name="Response message">
                     <dw:input-payload mimeType="application/json"/>
                     <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload
]]></dw:set-payload>
                </dw:transform-message>
            </when>
            <otherwise>
                <flow-ref name="notFoundResponse" doc:name="notFoundResponse"/>
            </otherwise>
        </choice>
    </flow>
    <flow name="createOrder">
        <dw:transform-message doc:name="Set var order, hardcodeProperties">
        	<dw:input-payload mimeType="application/json" />
            <dw:set-variable variableName="hardcodeProperties"><![CDATA[%dw 1.0
%output application/java
---
{
	tax: 4.27, 
	shipping: 5.00
}]]></dw:set-variable>
            <dw:set-variable variableName="order"><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-variable>
        </dw:transform-message>

        <dw:transform-message doc:name="Calculate total price">
            <dw:input-variable variableName="order"/>
            <dw:set-variable variableName="TotalPrice"><![CDATA[%dw 1.0
%output application/java
---
using (subtotal = flowVars.order.orderItems reduce ((item, sum1 = 0) -> sum1 + (item.itemUnitPrice.amount.currencyValue * 100 * item.quantity.amount))) {
        subtotal: ((round subtotal)/100)  as :string,
        tax: flowVars.hardcodeProperties.tax as :string, 
        shipping: flowVars.hardcodeProperties.shipping as :string,
        total: ((round (subtotal + flowVars.hardcodeProperties.tax*100 + flowVars.hardcodeProperties.shipping*100))/100)  as :string 
 } ]]></dw:set-variable>
        </dw:transform-message>
        <set-variable variableName="products" value="#[[]]" doc:name="var products"/>
        <foreach collection="flowVars.order.orderItems" doc:name="For Each Order Item">
            <http:request config-ref="retail-product-system-api" path="/products/{productId}" method="GET" doc:name="Get Product by Id">
                <http:request-builder>
                    <http:uri-param paramName="productId" value="#[payload.item.productId]"/>
                </http:request-builder>
            </http:request>
            <dw:transform-message doc:name="Add product to the list">
                <dw:set-variable variableName="products"><![CDATA[%dw 1.0
%output application/java
---
flowVars.products + {
	productId: payload.identifier,
	name: payload.brand ++ " " ++ payload.model
}]]></dw:set-variable>
            </dw:transform-message>
        </foreach>
        <dw:transform-message doc:name="Prepare request">
            <dw:input-payload mimeType="application/java"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
using(orderRequest = flowVars.order)
{
	customerId: orderRequest.customerId,
	price: flowVars.TotalPrice.total,
	orderItems: orderRequest.orderItems map ((orderItem) -> {
		itemId: orderItem.item.identifier,
		productId: orderItem.item.productId,
		location: orderItem.location,
		quantity: orderItem.quantity.amount,
		price: orderItem.itemUnitPrice.amount.currencyValue as :string,
		name: (flowVars.products filter ($.productId == orderItem.item.productId))[0].name
	})
}]]></dw:set-payload>
        </dw:transform-message>
        <logger level="INFO" doc:name="Logger" message="#[payload]"/>
        <http:request config-ref="retail-order-fulfillment-api" path="/orders" method="POST" doc:name="POST/orders">
            <http:request-builder>
                <http:header headerName="Content-Type" value="application/json"/>
            </http:request-builder>
        </http:request>

    </flow>
    <flow name="getOrdersByCustomer">

        <http:request config-ref="retail-orders-system-api" path="/orders/customer/{customerId}" method="GET" doc:name="GET/customers/{customerId}/orders">
            <http:request-builder>
                <http:uri-param paramName="customerId" value="#[flowVars.customerId]"/>
            </http:request-builder>
        </http:request>
        <dw:transform-message doc:name="Response message">
            <dw:input-payload doc:sample="sample_data\json.json" mimeType="application/json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
        </dw:transform-message>


    </flow>
    <flow name="getStores">
        <http:request config-ref="retail-locations-system-api" path="/stores" method="GET" doc:name="GET/stores"/>
        <dw:transform-message doc:name="Response message">
        	<dw:input-payload mimeType="application/json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload.results]]></dw:set-payload>
        </dw:transform-message>

    </flow>
    <flow name="getStore">
        <http:request config-ref="retail-locations-system-api" path="/stores/{storeId}" method="GET" doc:name="GET/stores/{storeId}">
            <http:request-builder>
                <http:uri-param paramName="storeId" value="#[flowVars.storeId]"/>

            </http:request-builder>
       		<http:success-status-code-validator values="200,404"/>
         </http:request>
         <choice doc:name="Found?">
             <when expression="#[message.inboundProperties.'http.status' == 200]">
                 <dw:transform-message doc:name="Response message">
                     <dw:input-payload mimeType="application/json"/>
                     <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload
]]></dw:set-payload>
                </dw:transform-message>
            </when>
            <otherwise>
                <flow-ref name="notFoundResponse" doc:name="notFoundResponse"/>
            </otherwise>
        </choice>
    </flow>
        <flow name="getPartners">
        <http:request config-ref="retail-partners-system-api" path="/partners" method="GET" doc:name="GET/partners"/>
        <dw:transform-message doc:name="Response message">
        	<dw:input-payload mimeType="application/json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload.results]]></dw:set-payload>
        </dw:transform-message>

    </flow>
    <flow name="getPartner">
        <http:request config-ref="retail-partners-system-api" path="/partners/{partnerId}" method="GET" doc:name="GET/partners/{partnerId}">
            <http:request-builder>
                <http:uri-param paramName="partnerId" value="#[flowVars.partnerId]"/>

            </http:request-builder>
       		<http:success-status-code-validator values="200,404"/>
         </http:request>
         <choice doc:name="Found?">
             <when expression="#[message.inboundProperties.'http.status' == 200]">
                 <dw:transform-message doc:name="Response message">
                     <dw:input-payload mimeType="application/json"/>
                     <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload
]]></dw:set-payload>
                </dw:transform-message>
            </when>
            <otherwise>
                <flow-ref name="notFoundResponse" doc:name="notFoundResponse"/>
            </otherwise>
        </choice>
    </flow>
    <flow name="getAvailability">
        	<choice doc:name="Base location known?">
                    <when expression="#[message.inboundProperties.'http.query.params'.latitude != null &amp;&amp; message.inboundProperties.'http.query.params'.longitude != null]">
                        <http:request config-ref="retail-availability-process-api" path="/availability" method="GET" doc:name="GET/products/{productId}/variants/{variantId}/availability">
            				<http:request-builder>
				                <http:query-param paramName="productId" value="#[flowVars.productId]"/>
				                <http:query-param paramName="variantId" value="#[flowVars.productVariantId]"/>
				                <http:query-param paramName="quantity" value="#[message.inboundProperties.'http.query.params'.quantity]"/>
				                <http:query-param paramName="metric" value="#[message.inboundProperties.'http.query.params'.metric]"/>
				                <http:query-param paramName="radius" value="#[message.inboundProperties.'http.query.params'.radius]"/>
				                <http:query-param paramName="latitude" value="#[message.inboundProperties.'http.query.params'.latitude]"/>
				                <http:query-param paramName="longitude" value="#[message.inboundProperties.'http.query.params'.longitude]"/>
				            </http:request-builder>
				        </http:request>    
                    </when>
                    <otherwise>
                        <http:request config-ref="retail-availability-process-api" path="/availability" method="GET" doc:name="GET/products/{productId}/variants/{variantId}/availability">
                            <http:request-builder>
				                <http:query-param paramName="productId" value="#[flowVars.productId]"/>
				                <http:query-param paramName="variantId" value="#[flowVars.productVariantId]"/>
				                <http:query-param paramName="quantity" value="#[message.inboundProperties.'http.query.params'.quantity]"/>
                            </http:request-builder>
                        </http:request>
                    </otherwise>
                </choice>
        <dw:transform-message doc:name="Response message">
        	<dw:input-payload mimeType="application/json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <sub-flow name="notFoundResponse"> 
     	<dw:transform-message doc:name="404 Not Found">
                     <dw:set-payload><![CDATA[%dw 1.0
 %output application/json
 ---
 {
 	message: "Resource not found"
 }]]></dw:set-payload>
       <dw:set-property propertyName="http.status"><![CDATA[%dw 1.0
%output application/java
---
404]]></dw:set-property>
                 </dw:transform-message>
     </sub-flow>
</mule>
