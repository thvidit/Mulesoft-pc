<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">
    <flow name="PlaceOrder">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/orders" doc:name="HTTP" allowedMethods="POST"/>
        <set-variable variableName="orderId" value="#[json:orderId]" doc:name="Set orderId"/>
        <set-variable variableName="jsonData" value="#[message.payload]" mimeType="application/json" doc:name="Save json data"/>
        <logger level="INFO" doc:name="Logger"/>
        <db:insert config-ref="MySQL_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[INSERT INTO orders values (#[json:orderId],#[json:userId],#[json:orderDesc],#[json:created],"Placed");]]></db:parameterized-query>
        </db:insert>
        <flow-ref name="Add-Items-to-orders" doc:name="Add-Items-to-orders"/>
    </flow>
    <flow name="UpdateUserOrders">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/" doc:name="HTTP"/>
        <set-variable variableName="orderId" value="#[json:orderId]" doc:name="Set orderId"/>
        <set-payload value="#[json:meals]" doc:name="Set Payload"/>
        <foreach doc:name="For Each">
            <db:update config-ref="MySQL_Configuration" doc:name="Database">
                <db:parameterized-query><![CDATA[UPDATE orders set meal_id = #[json:mealId] where orderId = #[json:orderId];]]></db:parameterized-query>
            </db:update>
        </foreach>
    </flow>
    <flow name="GetUserOrders">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/orders" allowedMethods="GET" doc:name="HTTP"/>
        <db:select config-ref="MySQL_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[SELECT o.order_id, order_desc, created, oi.meal_id 
FROM orders o INNER JOIN order_items oi ON o.order_id= oi.order_id 
WHERE user_id = #[message.inboundProperties.'http.query.params'.user];]]></db:parameterized-query>
        </db:select>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
    </flow>
    <flow name="CancelUserOrder">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/" doc:name="HTTP"/>
        <db:select config-ref="MySQL_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[SELECT order_status from orders
WHERE order_id = #[message.inboundProperties.'http.query.params'.orderid]]]></db:parameterized-query>
        </db:select>
    </flow>
    <sub-flow name="Add-Items-to-orders">
        <set-payload value="#[flowVars.jsonData]" doc:name="Set Payload"/>
        <set-payload value="#[json:meals]" mimeType="application/json" doc:name="Set Payload"/>
        <foreach doc:name="For Each">
            <db:insert config-ref="MySQL_Configuration" doc:name="Database">
                <db:parameterized-query><![CDATA[INSERT INTO order_items (order_id,meal_id)
values(#[flowVars.orderId],#[json:mealId])]]></db:parameterized-query>
            </db:insert>
        </foreach>
        <set-payload value="{
&quot;message&quot;: &quot;Order placed successfully.&quot;
}" doc:name="Set Payload"/>
    </sub-flow>
</mule>
